<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
             x:Class="Expenses.Wpf.ChargeView"
             mc:Ignorable="d" 
             d:DesignHeight="420" d:DesignWidth="779">
    <UserControl.Resources>
        <Style TargetType="Label" BasedOn="{StaticResource LabelStyle}"/>
        <Style TargetType="dxe:TextEdit" BasedOn="{StaticResource ValueEditorStyle}"/>
        <Style TargetType="dxe:ComboBoxEdit" BasedOn="{StaticResource ValueEditorStyle}"/>
        <Style TargetType="dxe:DateEdit" BasedOn="{StaticResource ValueEditorStyle}"/>
        <dx:BoolToDoubleConverter FalseValue="1" TrueValue="0" x:Key="InvertedBoolToDoubleConverter" />

        <SolidColorBrush x:Key="ActiveBackgroundBorderColor" Color="#FFF06060" />
        <SolidColorBrush x:Key="BackgroundBorderColor" Color="#FF3C3947" />
        <SolidColorBrush x:Key="ActiveForegroundColor" Color="#FF000000" />
        <SolidColorBrush x:Key="CaptionForegroundColor" Color="#7F000000" />
        <SolidColorBrush x:Key="ItemsControlBackground" Color="#FF333333"/>
        <SolidColorBrush x:Key="ItemsControlBorderBrush" Color="#00FFFFFF"/>
        <Color x:Key="ExpandedForegroundColor">#FFE8E8E9</Color>
        <Color x:Key="ForegroundColor">#FFE8E8E9</Color>
        <dx:BoolToDoubleConverter FalseValue="0" TrueValue="1" x:Key="BoolToDoubleConverter" />
        <dxe:DateTimePickerDataCaptionConverter x:Key="DateTimePickerDataCaptionConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ThemeName=TouchlineDark, ResourceKey=SelectorTemplate}" TargetType="{x:Type dxe:DateTimePickerSelector}">
            <Grid>
                <Grid Width="Auto" Height="Auto" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="SelectedItemContainer" Opacity="{Binding Path=IsAnimated, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}">
                    <dxe:DateTimePickerItem Foreground="{StaticResource ActiveForegroundColor}" Content="{Binding Path=SelectedItem, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=SelectedItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" IsExpanded="True" IsActive="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" x:Name="SelectedItemContainerData" />
                </Grid>
                <Grid VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="pickerSelectorContainer">
                    <dxe:DXScrollViewer VerticalScrollBarVisibility="Hidden" CanContentScroll="True"
                                    VerticalSnapPointsAlignment="Near"
                                    PanningMode="None"
                                    IsDeferredScrollingEnabled="True"
                                    dx:FocusHelper2.Focusable="False" IsManipulationEnabled="False">
                        <dxe:DateTimePickerPanel x:Name="pickerPanel" />
                    </dxe:DXScrollViewer>
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="selectedItemCaption"  Opacity="{Binding Path=IsAnimated, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}">
                        <TextBlock Margin="0,35,0,0" Text="{Binding Path=SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DateTimePickerDataCaptionConverter}}"  Foreground="{StaticResource ChartTextColor}" IsHitTestVisible="False" FontSize="12"/>
                    </Grid>
                </Grid>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ThemeName=TouchlineDark, ResourceKey=ItemTemplate}" TargetType="{x:Type dxe:DateTimePickerItem}">
            <ControlTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="true" />
                        <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="true" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard x:Name="expandedStateStoryboard">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="1" />
                                <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="{StaticResource ExpandedForegroundColor}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="expandedStateStoryboard" />
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="false" />
                        <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="true" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard x:Name="hiddenStateStoryboard">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="0" />
                                <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="{StaticResource ForegroundColor}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="hiddenStateStoryboard" />
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="true" />
                        <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="false" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard x:Name="instantlyExpandedStateStoryboard">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="1" />
                                <ColorAnimation Duration="0:0:0.0" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="{StaticResource ExpandedForegroundColor}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="instantlyExpandedStateStoryboard" />
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="false" />
                        <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="false" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard x:Name="instantlyHiddenStateStoryboard">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="itemBackground"  Storyboard.TargetProperty="Opacity" To="0" />
                                <ColorAnimation Duration="0:0:0.0" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="{StaticResource ForegroundColor}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="instantlyHiddenStateStoryboard" />
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
            <Grid Background="Transparent" Opacity="{Binding Path=IsFake, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}">
                <Grid x:Name="itemBackground" Opacity="0">
                    <Border x:Name="background" Opacity="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}" Background="#FF3C3947" Margin="{TemplateBinding Padding}" />
                    <Border x:Name="activeBackground" Opacity="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToDoubleConverter}}" Background="{StaticResource Brush_F06060}" Margin="{TemplateBinding Padding}" />
                    <Border x:Name="selectedBorder" Opacity="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}" BorderThickness="1" BorderBrush="{StaticResource BackgroundBorderColor}" Margin="{TemplateBinding Padding}" />
                    <Border x:Name="activeSelectedBorder" Opacity="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToDoubleConverter}}" BorderThickness="1" BorderBrush="{StaticResource ActiveBackgroundBorderColor}" Margin="{TemplateBinding Padding}" />
                </Grid>
                <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}">
                    <TextBlock.Foreground>
                        <SolidColorBrush x:Name="foregroundColor" Color="#FFE8E8E9" />
                    </TextBlock.Foreground>
                </ContentPresenter>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ThemeName=TouchlineDark, ResourceKey=Template}">
            <ItemsControl x:Name="ItemsControl" dx:FocusHelper2.Focusable="False" HorizontalAlignment="Center" Background="{StaticResource Brush_2F2C38}" BorderBrush="#FF515151" VirtualizingStackPanel.VirtualizationMode="Recycling" Margin="-4,-4,-5,-4"
                      ItemTemplate="{DynamicResource {dxet:DateTimePickerThemeKey ResourceKey=DateTimePickerItemTemplate}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal" VirtualizingStackPanel.VirtualizationMode="Recycling" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ControlTemplate>
    </UserControl.Resources>
    <StackPanel Margin="0,12,0,0">
        <Grid Width="745">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="6"/>
                <RowDefinition/>
                <RowDefinition Height="6"/>
                <RowDefinition/>
                <RowDefinition Height="6"/>
                <RowDefinition/>
                <RowDefinition Height="6"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="33"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="74"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="27"/>
                <ColumnDefinition Width="0.5*"/>
            </Grid.ColumnDefinitions>
            <Label Target="{Binding ElementName=expenseDateEdit}" Content="DATE" Margin="0,8"/>
            <dxe:DateEdit Name="expenseDateEdit" Grid.Column="2" DateTime="{Binding ExpenseDate, ValidatesOnDataErrors=True}">
                <dxe:DateEdit.Resources>
                    <DataTemplate x:Key="{dxet:ButtonsThemeKey ThemeName=TouchlineDark, ResourceKey=DropDownGlyph}">
                        <Grid Margin="-2,0,-2,0">
                            <Image Stretch="None" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="/DevExpress.Expenses;component/Views/Images/DateEditButton.png" />
                        </Grid>
                    </DataTemplate>
                    <ControlTemplate x:Key="{dxt:PopupBaseThemeKey ThemeName=TouchlineDark, ResourceKey=BorderTemplate}" TargetType="{x:Type dx:PopupBorderControl}">
                        <Grid Name="Root" ClipToBounds="False" Margin="0,1,0,0">
                            <Border x:Name="Border" Background="{StaticResource Brush_2F2C38}" BorderBrush="#FF44424C" BorderThickness="1" Width="{TemplateBinding ContentWidth}" Height="{TemplateBinding ContentHeight}" MinWidth="{TemplateBinding ContentMinWidth}" MaxWidth="{TemplateBinding ContentMaxWidth}" MinHeight="{TemplateBinding ContentMinHeight}" MaxHeight="{TemplateBinding ContentMaxHeight}">
                                <ContentPresenter />
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="AppType">
                                    <VisualState x:Name="Standalone" />
                                    <VisualState x:Name="BrowserHosted" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </dxe:DateEdit.Resources>
                <dxe:DateEdit.StyleSettings>
                    <dxe:DateEditPickerStyleSettings />
                </dxe:DateEdit.StyleSettings>
            </dxe:DateEdit>
            <Label Target="{Binding ElementName=billedTextEdit}" Content="BILLED AMOUNT" Grid.Column="4" Margin="0,8"/>
            <dxe:TextEdit Name="billedTextEdit" Grid.Column="6" EditValue="{Binding BilledAmount, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Mask="c0" MaskType="Numeric" MaskUseAsDisplayFormat="True" TextBlock.TextAlignment="Right" />
            <Label Target="{Binding ElementName=merchantTextEdit}" Content="MERCHANT" Grid.Row="2" Margin="0,8"/>
            <dxe:TextEdit Name="merchantTextEdit" Grid.Row="2" Grid.Column="2" Text="{Binding Merchant, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Target="{Binding ElementName=transactionTextEdit}" Content="TRANSACTION AMOUNT" Grid.Row="2" Grid.Column="4" Margin="0,8" />
            <dxe:TextEdit Name="transactionTextEdit" Text="{Binding TransactionAmount}" Grid.Row="2" Grid.Column="6" Mask="c0" MaskType="Numeric" MaskUseAsDisplayFormat="True" TextBlock.TextAlignment="Right"/>
            <Label Target="{Binding ElementName=locationTextEdit}" Content="LOCATION" Grid.Row="4" Margin="0,8"/>
            <dxe:TextEdit Name="locationTextEdit" Grid.Row="4" Grid.Column="2" Text="{Binding Location, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
            <Label Target="{Binding ElementName=categoryCmbBox}" Content="CATEGORY" Grid.Row="6" Margin="0,8" />
            <dxe:ComboBoxEdit Name="categoryCmbBox" Grid.Row="6" Grid.Column="2" SelectedItem="{Binding Path=CategoryName, ValidatesOnDataErrors=True}" ItemsSource="{Binding Path=CategoryTypes, Mode=OneTime}">
                <dxe:ComboBoxEdit.Resources>
                    <ControlTemplate x:Key="{dxt:PopupBaseThemeKey ThemeName=TouchlineDark, ResourceKey=BorderTemplate}" TargetType="{x:Type dx:PopupBorderControl}">
                        <Grid Name="Root" ClipToBounds="False" Margin="0,1,0,0">
                            <Border x:Name="Border" Background="{StaticResource Brush_2F2C38}" BorderBrush="#FF44424C" BorderThickness="1" Width="{TemplateBinding ContentWidth}" Height="{TemplateBinding ContentHeight}" MinWidth="{TemplateBinding ContentMinWidth}" MaxWidth="{TemplateBinding ContentMaxWidth}" MinHeight="{TemplateBinding ContentMinHeight}" MaxHeight="{TemplateBinding ContentMaxHeight}">
                                <ContentPresenter />
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="AppType">
                                    <VisualState x:Name="Standalone" />
                                    <VisualState x:Name="BrowserHosted" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </dxe:ComboBoxEdit.Resources>
            </dxe:ComboBoxEdit>
            <Grid Grid.Row="6" Grid.Column="4" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Target="{Binding ElementName=descTextEdit}" Content="DESCRIPTION" Grid.Column="0"/>
                <dxe:TextEdit Name="descTextEdit" Grid.Column="2" Text="{Binding Description, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
            <Label Target="{Binding ElementName=notesTextEdit}" Content="NOTES" Grid.Row="8"/>
            <dxe:TextEdit Name="notesTextEdit" Grid.Row="8" Height="80" Grid.Column="2" Grid.ColumnSpan="5" Text="{Binding Notes}" AcceptsReturn="True" VerticalAlignment="Stretch"  VerticalContentAlignment="Top"/>
        </Grid>
    </StackPanel>
</UserControl>
