<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    >
    <dx:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <ControlTemplate x:Key="{dxet:TextEditThemeKey ThemeName=TouchlineDark, ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid MinHeight="44">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="InternalFocusStates">
                    <VisualState x:Name="InternalFocused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InternalUnfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="2">
                <Border Name="border" Background="{StaticResource Brush_2F2C38}" BorderBrush="#FF44424C" BorderThickness="1" />
                <ContentPresenter/>
            </Grid>
            <Border x:Name="FocusElement" BorderBrush="{StaticResource Brush_F3B562}" BorderThickness="1" Opacity="0"/>
        </Grid>
    </ControlTemplate>
    <SolidColorBrush x:Key="{dxt:BrushesThemeKey ResourceKey=EditorPopupListBoxBackground}" Color="{StaticResource GridBackgroundColor}" />

    <ControlTemplate x:Key="{dxet:EditorListBoxThemeKey ThemeName=TouchlineDark, ResourceKey=ItemTemplate}" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Grid x:Name="Root">
            <Rectangle x:Name="FocusVisual" StrokeThickness="1" Stroke="#FFFFFFFF" StrokeDashArray="1 2" Opacity="0" />
            <Border x:Name="InactiveSelectedState" Background="#FF3C3947" Opacity="0" />
            <Border x:Name="SelectedState" Background="{StaticResource Brush_F06060}" Opacity="0" />
            <Border x:Name="HoverState" Background="#FF3C3947" Opacity="0" Visibility="{Binding Owner.AllowItemHighlighting, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
            <Rectangle x:Name="FocusedState" StrokeThickness="1" Stroke="#FFFFFFFF" StrokeDashArray="1 2" Opacity="0" />
            <dx:ContentContainer x:Name="content" Margin="8,10,8,10">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </dx:ContentContainer>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="SelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                <Setter TargetName="InactiveSelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="content" Property="ForegroundSolidColor3" Value="#FFFFFFFF" />
            </Trigger>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter TargetName="SelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                <Setter TargetName="InactiveSelectedState" Property="Opacity" Value="1" />
                <Setter TargetName="content" Property="ForegroundSolidColor4" Value="#DBFFFFFF" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="SelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                <Setter TargetName="InactiveSelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="FocusVisual" Property="Opacity" Value="1" />
                <Setter TargetName="content" Property="ForegroundSolidColor2" Value="#FFFFFFFF" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True" />
                    <Condition Property="Selector.IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="SelectedState" Property="Opacity" Value="1" />
                <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                <Setter TargetName="InactiveSelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="content" Property="ForegroundSolidColor2" Value="#FF333333" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="content" Property="Opacity" Value="0.35" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="ButtonTemplate">
        <Grid>
            <Grid.Resources>
                <Style x:Key="PressedElementStyle" TargetType="{x:Type ContentControl}">
                    <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <Border Background="#FF363340" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="pressed1" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Opacity" To="0.25" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pressed2" Storyboard.TargetProperty="Visibility">
                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="DefaultState" Background="{StaticResource Brush_2F2C38}" Grid.ColumnSpan="1" />
            <Border x:Name="HoverState" Background="#FF3C3947" Grid.ColumnSpan="1" Opacity="0" />
            <ContentControl x:Name="pressed1" Style="{StaticResource PressedElementStyle}" Opacity="0" />
            <ContentControl x:Name="pressed2" Style="{StaticResource PressedElementStyle}" Visibility="Collapsed" />
            <Grid x:Name="Arrow" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.ColumnSpan="1" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.7*" />
                    <ColumnDefinition Width="0.3*" MinWidth="44" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Glyph" Grid.ColumnSpan="2" Style="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=ButtonInfoContentStyle}}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=GlyphKind}" Value="User">
                <Setter TargetName="Glyph" Property="Style" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=UserButtonInfoContentStyle}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=GlyphKind}" Value="None">
                <Setter TargetName="Glyph" Property="Style" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=NoneButtonInfoContentStyle}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxet:ButtonsThemeKey ThemeName=TouchlineDark, ResourceKey=ButtonStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Width" Value="36" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground}" />
        <Setter Property="Content" Value="{Binding Path=Content}" />
        <Setter Property="ContentTemplate" Value="{Binding Path=ContentTemplate}" />
        <Setter Property="Command" Value="{Binding Path=Command}" />
        <Setter Property="CommandParameter" Value="{Binding Path=CommandParameter}" />
        <Setter Property="ClickMode" Value="{Binding Path=ClickMode}" />
        <Setter Property="IsEnabled" Value="{Binding Path=IsEnabled}" />
        <Setter Property="Visibility" Value="{Binding Path=(dxe:ButtonInfo.Visibility)}" />
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
        <Setter Property="CommandTarget" Value="{Binding Path=CommandTarget}" />
        <Setter Property="ToolTip" Value="{Binding Path=ToolTip}" />
        <Setter Property="ToolTipService.ShowDuration" Value="{Binding Path=(ToolTipService.ShowDuration)}" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="{Binding Path=(ToolTipService.InitialShowDelay)}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsLeft}" Value="True">
                <Setter Property="Margin" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=LeftButtonMargin}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsLeft}" Value="False">
                <Setter Property="Margin" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=RightButtonMargin}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxet:EditorListBoxThemeKey ResourceKey=Style}" TargetType="{x:Type dxe:EditorListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=Template}}" />
        <Setter Property="Background" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=EditorPopupListBoxBackground}}" />
        <Setter Property="TextSearch.TextPath" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(TextSearch.TextPath), RelativeSource={RelativeSource Self}}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(ScrollViewer.CanContentScroll), RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="{dxet:EditorListBoxThemeKey ThemeName=TouchlineDark, ResourceKey=PopupStyle}" TargetType="{x:Type dxe:EditorListBox}" BasedOn="{StaticResource {dxet:EditorListBoxThemeKey ResourceKey=Style}}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    </Style>
</ResourceDictionary>